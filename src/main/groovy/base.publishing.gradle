plugins {
    id "maven-publish"
    id "signing"
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    repositories {
        maven {
            name = "reposilite"
            def releasesUrl = "https://maven.lenni0451.net/releases"
            def snapshotsUrl = "https://maven.lenni0451.net/snapshots"
            url = project.maven_version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl

            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
        maven {
            name = "ossrh"
            def releasesUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = project.maven_version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl

            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId = project.maven_name
            groupId = project.maven_group
            version = project.maven_version

            from components.java

            pom {
                name = project.name
                description = project.maven_description
                url = "https://github.com/" + project.github_repo
                licenses {
                    license {
                        name = project.license
                        url = "https://github.com/" + project.github_repo + "/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "Lenni0451"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/" + project.github_repo + ".git"
                    developerConnection = "scm:git:ssh://github.com/" + project.github_repo + ".git"
                    url = "github.com/" + project.github_repo
                }
            }
        }
    }
}

signing {
    setRequired(false)
    sign(publishing.publications.maven)
}

tasks.withType(PublishToMavenRepository).configureEach {
    it.dependsOn(tasks.withType(Sign))
}
